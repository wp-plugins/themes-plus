/**
 * https://github.com/mhuggins/jquery-countTo (MIT license)
**/

(function(d){var a=function(b,e){this.$element=d(b);this.options=d.extend({},a.DEFAULTS,this.dataOptions(),e);this.init()};a.DEFAULTS={from:0,to:0,speed:1E3,refreshInterval:100,decimals:0,formatter:function(b,a){return b.toFixed(a.decimals)},onUpdate:null,onComplete:null};a.prototype.init=function(){this.value=this.options.from;this.loops=Math.ceil(this.options.speed/this.options.refreshInterval);this.loopCount=0;this.increment=(this.options.to-this.options.from)/this.loops};a.prototype.dataOptions=
function(){var b={from:this.$element.data("from"),to:this.$element.data("to"),speed:this.$element.data("speed"),refreshInterval:this.$element.data("refresh-interval"),decimals:this.$element.data("decimals")},a=Object.keys(b),c;for(c in a){var d=a[c];"undefined"===typeof b[d]&&delete b[d]}return b};a.prototype.update=function(){this.value+=this.increment;this.loopCount++;this.render();"function"==typeof this.options.onUpdate&&this.options.onUpdate.call(this.$element,this.value);this.loopCount>=this.loops&&
(clearInterval(this.interval),this.value=this.options.to,"function"==typeof this.options.onComplete&&this.options.onComplete.call(this.$element,this.value))};a.prototype.render=function(){var a=this.options.formatter.call(this.$element,this.value,this.options);this.$element.text(a)};a.prototype.restart=function(){this.stop();this.init();this.start()};a.prototype.start=function(){this.stop();this.render();this.interval=setInterval(this.update.bind(this),this.options.refreshInterval)};a.prototype.stop=
function(){this.interval&&clearInterval(this.interval)};a.prototype.toggle=function(){this.interval?this.stop():this.start()};d.fn.countTo=function(b){return this.each(function(){var e=d(this),c=e.data("countTo"),f="object"===typeof b?b:{},g="string"===typeof b?b:"start";c&&"object"!==typeof b||(c&&c.stop(),e.data("countTo",c=new a(this,f)));c[g].call(c)})}})(jQuery);


/*global jQuery:false */

// Initialize countTo on scroll/touchmove, if in viewport
(function ($) {
    "use strict";
    
    var $window = $(window);
    
    function isElementInViewport (el) {
        if (el.length === 0) {
            return false;
        } else {
            el = el[0];
        }
        
        var rect = el.getBoundingClientRect();
        return (
            rect.top >= 0 &&
            rect.left >= 0 &&
            rect.bottom <= $window.height() &&
            rect.right <= $window.width()
        );
    }
    
    function startCountTo () {
        var $timer = $('.countup');
        
        if (isElementInViewport($timer) && $timer.is(':empty')) {
            $timer.countTo({
                formatter: function (value, options) {
                    return new Intl.NumberFormat().format(value.toFixed(0));
                }
            });
        }
        
        if (!isElementInViewport($timer)) {
            $timer.html(""); // clear content if not in viewport
        }
    }
    
    $(document).ready(function () {
        $('.countup').html(""); // clear content on start
        
        startCountTo();
    });
    
    $window.on('scroll touchmove', function () {
        startCountTo();
    });
    
}(jQuery));